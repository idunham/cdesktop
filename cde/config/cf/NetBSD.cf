XCOMM platform:  $XConsortium: NetBSD.cf /main/16 1996/10/31 14:47:14 kaleb $



XCOMM platform:  $XFree86: xc/config/cf/NetBSD.cf,v 3.44 1996/10/23 13:07:55 dawes Exp $

#ifndef OSName
#define OSName			DefaultOSName
#endif
#ifndef OSMajorVersion
#define OSMajorVersion		DefaultOSMajorVersion
#endif
#ifndef OSMinorVersion
#define OSMinorVersion		DefaultOSMinorVersion
#endif
/* 1 = A, 2 = B, 3 = C */
#ifndef OSTeenyVersion
#define OSTeenyVersion		DefaultOSTeenyVersion
#endif


#ifndef OSVendor
#define	OSVendor	/**/
#endif
XCOMM operating system:  OSName

#define LibDir			/usr/X11R7/lib/X11
#define UsrLibDir		/usr/X11R7/lib
#define ManDirectoryRoot	/usr/X11R7/man
#define FontDir			/usr/X11R7/lib/X11/fonts
#define FontEncDir		/usr/X11R7/lib/X11/fonts/encodings

/*
 * C library features
 */
#if defined(NetBSDArchitecture) && (OsMajorVersion == 1 && OsMinorVersion >= 2)
#  define HasPoll			YES
#endif
#define HasNdbm         	YES
#define HasPutenv       	YES
#define HasSnprintf		YES
#define HasBSD44Sockets 	YES
#define Malloc0ReturnsNull	NO
#define SetTtyGroup     	YES
#define DBMLibrary		/**/
#ifndef HasLibCrypt
# define HasLibCrypt		YES
#endif
#ifndef HasShm
# if OSMajorVersion == 0 && OSMinorVersion == 9 && OSTeenyVersion == 2
/*
 * Shm memory was removed in 0.9B because it was encumbered.
 * A free version was added in 0.9C
 */
#  define HasShm          	NO
# else
#  define HasShm          	YES
# endif
#endif
#define HasWChar32		YES
/*
 * There's a bug in NetBSD 1.0, 1.1 and 1.2 dlsym()
 */
#if OSMajorVersion == 1 && OSMinorVersion <= 2
#  define HasDlsymBug		YES
#endif

/*
 * Compiler Features
 */
#undef HasGcc
#define HasGcc			YES
#define HasGcc2			YES
#ifndef HasGcc2ForCplusplus
#define HasGcc2ForCplusplus	YES
#endif
#define GccUsesGas		YES
#define UseGas			YES
#define GnuCpp			YES

#define NeedConstPrototypes	YES
#define NeedFunctionPrototypes	YES
#define NeedNestedPrototypes	YES
#define NeedVarargsPrototypes	YES
#define NeedWidePrototypes	NO

#define MkdirHierCmd		mkdir -p

#define PerlCmd			/usr/pkg/bin/perl

#define CppCmd          	/usr/bin/cpp
#define StandardCppDefines	-traditional
#define PreProcessCmd   	CppCmd
#define PreIncDir		/usr/include

#undef CcCmd
#define CcCmd 			gcc
#if UseInstalled
#define DefaultCCOptions 	/**/
#else
#define DefaultCCOptions 	-pipe
#endif

#define CplusplusLibC		-lm -lstdc++

#define GccGasOption 		-DGCCUSESGAS
#define AsmDefines 		-DUSE_GAS


#ifdef i386Architecture
# ifndef OptimizedCDebugFlags
#  define OptimizedCDebugFlags 	-O2 -fno-strict-aliasing
# endif
# if OSMajorVersion < 1
#  define ServerOSDefines	XFree86ServerOSDefines -DDDXTIME -DXNO_SYSCONF
# else
#  define ServerOSDefines	XFree86ServerOSDefines -DDDXTIME
# endif
# if OSMajorVersion == 1 && OSMinorVersion >= 1 || OSMajorVersion >= 2
#  define ServerExtraSysLibs	-li386
# endif
#else
# ifndef OptimizedCDebugFlags
#  define OptimizedCDebugFlags 	-O2 -fno-strict-aliasing
# endif
# if defined(SparcArchitecture)
#  define ServerOSDefines 	-DDDXOSINIT
# else
#  define ServerOSDefines 	/**/
# endif
#endif
#ifdef i386Architecture
# define ServerExtraDefines GccGasOption XFree86ServerDefines
# ifndef XFree86ConsoleDefines
#  define XFree86ConsoleDefines -DPCCONS_SUPPORT -DPCVT_SUPPORT
# endif
#else
# define ServerExtraDefines GccGasOption
#endif

#define StandardDefines	-DCSRG_BASED
#define XawI18nDefines	-DUSE_XWCHAR_STRING -DUSE_XMBTOWC

#if OSMajorVersion > 0
# ifndef BuildDynamicLoading
# define BuildDynamicLoading	YES
# endif
#endif

#ifndef ExtraLibraries
#define ExtraLibraries		/**/
#endif
#ifndef UseGnuMalloc
# define UseGnuMalloc		YES
#endif
#ifndef GnuMallocLibrary
#define GnuMallocLibrary	-lgnumalloc
#endif

/*
 * Make & install Features
 */

#define HasMakefileSafeInclude	YES
#define IncludeMakefile(file) @@# dependencies are in .depend
#define DependFileName .depend
#define AvoidNullMakeCommand 	YES
#define StripInstalledPrograms	YES
#define CompressAllFonts	YES
#define DefaultUserPath		.:/bin:/usr/bin:/usr/local/bin:$(BINDIR)
#define DefaultSystemPath	/sbin:/usr/sbin:/bin:/usr/bin:$(BINDIR)
#define BuildLibPathVar		LD_LIBRARY_PATH

#ifdef  InstallCmd
# undef  InstallCmd
# define InstallCmd 		/usr/bin/install
#endif

#ifndef ExtraFilesToClean
# define ExtraFilesToClean 	*.core
#endif

/*
 * Documentation formatting
 */
#define NeqnCmd			neqn -Tlatin1
#define	EqnCmd 			eqn -Tps
#define TroffCmd        	groff -Tps

/*
 * To use the NetBSD Aperture driver
 */
#if defined(i386Architecture)
#ifndef HasNetBSDApertureDrv
#define HasNetBSDApertureDrv	NO
#endif
#endif

#define MakeHasPosixVariableSubstitutions	YES

/*
 * ForceSubdirs - force make to build subdirectories
 * 
 * For BSD 4.4 make 
 */
#define ForceSubdirs(dirs)						@@\
dirs:	.EXEC								@@\
	@cd $@ ; echo "making all in $(CURRENT_DIR)/$@..."; \		@@\
	$(MAKE) $(MFLAGS) PassCDebugFlags all				@@\
									@@\
.EXEC:


#include <bsdLib.rules>

#ifdef i386Architecture
# include <xfree86.cf>
#endif

/*
 * Definitions for the SUN server on NetBSD/sparc
 */
#ifdef SparcArchitecture
#ifndef Xsun24Server
#define Xsun24Server	NO
#endif
#ifndef XsunServer
#define XsunServer	YES
#endif
#ifndef XsunMonoServer
#define XsunMonoServer	YES
#endif
#ifndef BuildScreenSaverLibrary
#define BuildScreenSaverLibrary	YES
#endif
/*
 * XFree86 uses its own (more portable) database routines to speed up 
 * the RGB database lookups
 * However, if you want to use ndbm anyway, you can set that to NO in 
 * site.def
 */
#ifndef UseRgbTxt
#define UseRgbTxt	YES
#endif
#endif

/*
 * Definition for compiling on MIPS machines
 */
#ifdef MipsArchitecture
#define PositionIndependentCFlags
#define SharedLibraryLoadFlags -x -shared --whole-archive -soname `echo $@ |
sed 's/\.[0-9]*$$//'`
#define SharedXtReqs $(XLIBONLY) $(SMLIB) $(ICELIB)
#define SharedXmuReqs $(LDPRELIB) $(XTOOLONLYLIB) $(XONLYLIB) $(EXTENSIONLIB)
#endif


/* For DtHelp TIFF processing routines. */
#ifdef AMD64Architecture
#define LSBBitOrder             YES
#endif

#ifdef ARMArchitecture
#define LSBBitOrder             YES
#endif

#ifdef i386Architecture
#define LSBBitOrder             YES
#endif


/*
 * Generic settings for all architectures
 * which can be overridden by architecture specific sections above
 */

#ifdef HasGcc2
CXXDEPENDINCLUDE != CppCmd -x c++ -Wp,-v < /dev/null \
		    2>&1 | sed -n 's/ \(.*[cg]++.*\)/-I\1/p'
#define CplusplusDependIncludes	$(CXXDEPENDINCLUDE)
#endif

#ifndef StandardIncludes
# define StandardIncludes	-I/usr/pkg/include -I/usr/local/include
#endif

#ifndef MTop
#define MTop			$(TOP)/imports/motif
#endif

#ifndef TopMotifInclude
# define TopMotifInclude	/usr/pkg/include
#endif

#ifndef ExtraLoadFlags
# define ExtraLoadFlags -Wl,-rpath,$(USRLIBDIRPATH):$(CDE_INSTALLATION_TOP)/lib
#endif

#ifndef SharedTtReqs
# define SharedTtReqs $(LDPRELIBS) SharedXReqs $(CXXLIB) -Wl,-rpath,$(USRLIBDIRPATH)
#endif

#ifndef SharedDtSvcReqs
# define SharedDtSvcReqs $(LDPRELIBS) SharedXReqs $(CXXLIB) -Wl,-rpath,$(USRLIBDIRPATH)
#endif

#ifndef SharedDtHelpReqs
# define SharedDtHelpReqs $(LDPRELIBS) $(ICONVSYSLIB) SharedXReqs -Wl,-rpath,$(USRLIBDIRPATH)
#endif

#ifndef SharedCsaReqs
# define SharedCsaReqs -lXt $(LDPOSTLIBS) -Wl,-rpath,$(USRLIBDIRPATH)
#endif

#ifndef KornShell
#define KornShell		/usr/pkg/bin/ksh93
#endif
